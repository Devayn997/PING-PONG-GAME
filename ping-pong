from pygame import*
import pygame
pygame.init()
pygame.font.init()
game_font = pygame.font.SysFont('Romance 3', 30)
win_width = 700
win_hight = 500
speed_x = 15
speed_y = 15
points1 = 0
points2 = 0
lost1 = game_font.render("Player 1 lost for 2 player!",True,(255,0,0))
lost2 = game_font.render("Player 2 lost for 1 player!",True,(255,0,0))
gamepoint1 = game_font.render("1 player points="+ str(points1),True,(255,165,0))
gamepoint2 = game_font.render("2 player points="+ str(points2),True,(255,165,0))
window = display.set_mode((win_width,win_hight))
display.set_caption("Ping-Pong")
background = transform.scale(image.load("cosmos.jpg"),(win_width,win_hight))
class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        sprite.Sprite.__init__(self)
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))
class Player(GameSprite):
    def update_r(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y>5:
            self.rect.y -=self.speed
        if keys[K_DOWN] and self.rect.y<win_hight-80:
            self.rect.y +=self.speed
    def update_l(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y>5:
            self.rect.y -=self.speed
        if keys[K_s] and self.rect.y<win_hight-80:
            self.rect.y +=self.speed
run = True
finish = False
racket1=Player("Rockets.png",30,200,50,100,30)
racket2=Player("Rockets2.png",620,200,50,100,30)
ball = GameSprite("Sprite-0001.png",200,200,50,50,4)
while run:
    for e in event.get():
        if e.type == QUIT:
            run = False
    if finish!= True:
        window.blit(background,(0,0))
        racket1.update_l()
        racket2.update_r()
        racket1.reset()
        racket2.reset()
        ball.rect.x +=speed_x
        ball.rect.y +=speed_y
        if ball.rect.y > win_hight-50 or ball.rect.y < 0:
            speed_y *= -1
        if sprite.collide_rect(racket1,ball) or sprite.collide_rect(racket2,ball):
            speed_x *= -1
        if ball.rect.x > win_width-50:
            points1+=1
            speed_x *= -1
            background.blit(gamepoint1, (500,10))

        if ball.rect.x < 0:
            points2+=1
            speed_x *= -1
            background.blit(gamepoint2, (10,10))

        if points1==5:
            finish=True
            ball.rect.x = win_width/2
            ball.rect.y = win_hight/2
            background.blit(lost1, (10,10))
        if points2==5:
            finish=True
            ball.rect.x = win_width/2
            ball.rect.y = win_hight/2
            background.blit(lost2, (10,10))
        ball.reset()

    display.update()   
    time.delay(100)   